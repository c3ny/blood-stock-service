name: CI - Build and Test

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: sa
          POSTGRES_PASSWORD: 1
          POSTGRES_DB: SangueSolidario
        options: >-
          --health-cmd "pg_isready -U sa"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ☕ Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: 🐘 Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper

      - name: 🔍 Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: 📦 Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: 🔧 Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: 🏗️ Build with Gradle
        run: ./gradlew build -x test --no-daemon
        env:
          DB_HOST: localhost
          DB_PORT: 5432
          DB_NAME: SangueSolidario
          DB_USER: sa
          DB_PASSWORD: 1

      - name: 🧪 Run tests
        run: ./gradlew test --no-daemon
        env:
          CI: true
          DB_HOST: localhost
          DB_PORT: 5432
          DB_NAME: SangueSolidario
          DB_USER: sa
          DB_PASSWORD: 1

      - name: 📊 Generate test report
        if: always()
        uses: dorny/test-reporter@v1
        with:
          name: Test Results
          path: build/test-results/test/*.xml
          reporter: java-junit

      - name: 📈 Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: build/test-results/test/

      - name: 📦 Upload build artifacts
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: build/libs/*.jar

      - name: 💬 Comment PR with test results
        if: github.event_name == 'pull_request' && always()
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: build/test-results/test/*.xml
          comment_title: 🧪 Test Results

