plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.5'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.14'
    id 'checkstyle'
    id 'com.github.spotbugs' version '6.0.0'
    id 'jacoco'
    id 'org.owasp.dependencycheck' version '8.4.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

jacoco {
    toolVersion = "0.8.10"
}

repositories {
    mavenCentral()
}

checkstyle {
    toolVersion = '10.12.0'
    configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
}

javafx {
    version = "17.0.12"
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}

spotbugs {
    toolVersion = '4.7.3'
    effort = 'max'
    reportLevel = 'medium'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.postgresql:postgresql'
    implementation "org.openjfx:javafx-controls:17.0.12"
    implementation "org.openjfx:javafx-fxml:17.0.12"
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.2'
    implementation 'org.mapstruct:mapstruct:1.5.5.Final' // MapStruct principal
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final' // Processador de anotações
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.16.2'
    implementation 'com.itextpdf:kernel:7.2.5'
    implementation 'com.itextpdf:layout:7.2.5'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.apache.logging.log4j:log4j-layout-template-json'
}

tasks.named('test') {
    enabled = false
    useJUnitPlatform()
}

test {
    useJUnitPlatform()

    // Excluir testes de interface gráfica no CI
    if (System.getenv("CI") == "true") {
        exclude '**/view/**'
    }

    finalizedBy jacocoTestReport
}

// ==================
// Task para o Backend (Spring Boot)
// ==================
task runBackend(type: JavaExec) {
    group = 'application'
    description = 'Roda apenas o backend Spring Boot'
    classpath = sourceSets.main.runtimeClasspath
    mainClass.set('com.example.BloodStockServiceApplication')
}

// ==================
// Task para o Frontend (JavaFX)
// ==================
task runFrontend(type: JavaExec) {
    group = 'application'
    description = 'Roda apenas o frontend JavaFX'
    classpath = sourceSets.main.runtimeClasspath
    mainClass.set('com.example.view.BloodstockForm')
    jvmArgs = [
            '--module-path', configurations.runtimeClasspath.filter { it.name.startsWith("javafx") }.collect { it.absolutePath }.join(File.pathSeparator),
            '--add-modules', 'javafx.controls,javafx.fxml'
    ]
}
